{"version":3,"sources":["components/Prompter.js","services/PromptService.js","components/NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["Prompter","useState","prompt","setPrompt","useEffect","retrievePrompt","axios","then","response","data","className","style","height","promptLoaded","data-testid","onClick","NavBar","PROMPT_GENERATOR_LINK","ADMIN_LINK","to","path","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yQAsCeA,MAnCf,WAAqB,IAAD,EACUC,mBAAS,IADnB,mBACXC,EADW,KACHC,EADG,KAGlBC,qBAAU,WACRC,MACC,IAEH,IAAMA,EAAiB,WCPhBC,MAAU,uDDQDC,MAAK,SAAAC,GACjBL,EAAUK,EAASC,UAUvB,OACE,sBAAKC,UAAW,qBAAhB,UACE,kDACA,qBAAKC,MAAO,CAAEC,OAAQ,QAAtB,SATiB,WACnB,GAAIV,EAAOA,OACT,OAAQ,kCAAKA,EAAOA,OAAZ,OAQLW,KAGH,wBACEH,UAAW,kBACXI,cAAa,gBACbC,QAASV,EAHX,gCEqBSW,MAzCf,WACE,IAAMC,EAAwB,mBACxBC,EAAa,UAEnB,OACE,cAAC,IAAD,UACE,gCACE,qBAAKR,UAAW,yDAAhB,SACE,sBAAKA,UAAW,YAAhB,UACE,sBAAMA,UAAW,uBAAjB,oCAEA,sBAAMA,UAAW,2BAAjB,SACE,qBAAIA,UAAW,aAAf,UACE,oBAAIA,UAAW,kBAAf,SACE,cAAC,IAAD,CACES,GAAIF,EACJP,UAAW,mBACXI,cAAa,qBAHf,gCAMF,oBAAIJ,UAAU,kBAAd,SACE,cAAC,IAAD,CAAMS,GAAID,EAAYR,UAAW,mBAAjC,4CAOV,eAAC,IAAD,WACE,cAAC,IAAD,CAAOU,KAAMH,EAAb,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOG,KAAMF,EAAb,SACE,mBAAGR,UAAW,qBAAd,2EClCGW,MAJf,WACE,OAAQ,cAAC,EAAD,KCOKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.bf32f793.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { fetchPrompt } from '../services/PromptService';\n\nfunction Prompter() {\n  const [prompt, setPrompt] = useState('');\n\n  useEffect(() => {\n    retrievePrompt()\n  }, []);\n\n  const retrievePrompt = () => {\n    fetchPrompt().then(response => {\n      setPrompt(response.data);\n    });\n  }\n\n  const promptLoaded = () => {\n    if (prompt.prompt) {\n      return (<p>\"{prompt.prompt}\"</p>);\n    }\n  }\n\n  return (\n    <div className={'container spacer-2'}>\n      <h1>Prompt Generator</h1>\n      <div style={{ height: '3rem' }}>\n        {promptLoaded()}\n      </div>\n\n      <button\n        className={'btn btn-primary'}\n        data-testid={'refreshPrompt'}\n        onClick={retrievePrompt}\n      >Refresh Prompt</button>\n    </div>\n  );\n}\n\nexport default Prompter;","import * as axios from 'axios';\n\nexport const fetchPrompt = () => {\n  return axios.get('https://thawing-fortress-26537.herokuapp.com/prompt');\n}","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Link,\n  Route,\n  Switch\n} from \"react-router-dom\";\nimport Prompter from './Prompter';\n\nfunction NavBar() {\n  const PROMPT_GENERATOR_LINK = '/journal-prompt/';\n  const ADMIN_LINK = '/admin/';\n\n  return (\n    <Router>\n      <div>\n        <nav className={'navbar sticky-top navbar-expand-lg navbar-dark bg-dark'}>\n          <div className={'container'}>\n            <span className={'navbar-brand mb-0 h1'}>Journal Prompt Project</span>\n\n            <form className={'form-inline my-2 my-lg-0'}>\n              <ul className={'navbar-nav'}>\n                <li className={'nav-item active'}>\n                  <Link\n                    to={PROMPT_GENERATOR_LINK}\n                    className={'nav-link mr-sm-2'}\n                    data-testid={'promptGeneratorNav'}\n                  >Prompt Generator</Link>\n                </li>\n                <li className=\"nav-item active\">\n                  <Link to={ADMIN_LINK} className={'nav-link mr-sm-2'}>Admin ‚öôÔ∏è</Link>\n                </li>\n              </ul>\n            </form>\n          </div>\n        </nav>\n\n        <Switch>\n          <Route path={PROMPT_GENERATOR_LINK}>\n            <Prompter />\n          </Route>\n          <Route path={ADMIN_LINK}>\n            <p className={'container spacer-2'}>üöß Admin Under Construction üöß</p>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default NavBar;","import './App.css';\nimport React from 'react';\nimport NavBar from './components/NavBar';\n\nfunction App() {\n  return (<NavBar/>);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}