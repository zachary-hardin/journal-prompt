{"version":3,"sources":["services/PromptService.js","components/Prompter.js","components/NewPromptForm.js","components/PromptsTable.js","components/Admin.js","components/NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["BASE_URL","Prompter","useState","prompt","setPrompt","useEffect","retrievePrompt","axios","then","response","data","className","style","height","promptLoaded","data-testid","onClick","NewPromptForm","props","newPrompt","setNewPrompt","addPromptStatus","setAddPromptStatus","handleSubmit","params","status","reloadData","setIsNewItem","catch","reason","isInputBlank","trim","onKeyPress","e","event","key","preventDefault","type","placeholder","value","onChange","target","disabled","PromptsTable","scope","slice","reverse","map","index","isNewItem","verticalAlign","_id","deletePrompt","color","Admin","prompts","setPrompts","loadPrompts","NavBar","PROMPT_GENERATOR_LINK","ADMIN_LINK","basename","process","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","textAlign","to","path","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.74242df6.chunk.js","sourcesContent":["import * as axios from 'axios';\n\nconst BASE_URL = 'https://thawing-fortress-26537.herokuapp.com';\n\nexport const fetchPrompt = () => {\n  return axios.get(`${BASE_URL}/prompt`);\n}\n\nexport const fetchPrompts = () => {\n  return axios.get(`${BASE_URL}/get-prompts`);\n}\n\nexport const insertPrompt = (prompt) => {\n  return axios.post(`${BASE_URL}/new-prompt`, null, { params: { prompt } });\n}\n\nexport const deletePrompt = (prompt) => {\n  return axios.delete(`${BASE_URL}/delete`, { params: { _id: prompt._id } });\n}","import React, { useEffect, useState } from 'react';\nimport { fetchPrompt } from '../services/PromptService';\n\nfunction Prompter() {\n  const [prompt, setPrompt] = useState('');\n\n  useEffect(() => {\n    retrievePrompt()\n  }, []);\n\n  const retrievePrompt = () => {\n    fetchPrompt().then(response => {\n      setPrompt(response.data);\n    });\n  }\n\n  const promptLoaded = () => {\n    if (prompt.prompt) {\n      return (<p>\"{prompt.prompt}\"</p>);\n    }\n  }\n\n  return (\n    <div className={'container spacer-2'}>\n      <h1>Prompt Generator</h1>\n      <div style={{ height: '4em' }}>\n        {promptLoaded()}\n      </div>\n\n      <button\n        className={'btn btn-primary col-lg-2 col-md-3 col-sm-12 mt-1'}\n        data-testid={'refreshPrompt'}\n        onClick={retrievePrompt}\n      >Refresh Prompt</button>\n    </div>\n  );\n}\n\nexport default Prompter;","import React, { useState } from 'react';\nimport { insertPrompt } from '../services/PromptService';\n\nfunction NewPromptForm(props) {\n  const [newPrompt, setNewPrompt] = useState('');\n  const [addPromptStatus, setAddPromptStatus] = useState(200);\n\n  const temporaryNotificationMessage = () => {\n    if (addPromptStatus === 201) {\n      return (\n        <p>New Prompt Added</p>\n      );\n    } else if (addPromptStatus === 409) {\n      return (\n        <p>Failed to Add New Prompt</p>\n      );\n    }\n  };\n\n  const handleSubmit = () => {\n    insertPrompt(newPrompt).then(response => {\n      setAddPromptStatus(response.status);\n      setNewPrompt('');\n      props.reloadData();\n      props.setIsNewItem(true);\n    }).catch(reason => setAddPromptStatus(reason.response.status))\n  };\n\n  const isInputBlank = () => {\n    return newPrompt.trim() === '';\n  };\n\n  const handleOnEnter = (event) => {\n    const isEnterKey = event.key === 'Enter';\n\n    if (isEnterKey && !isInputBlank()) {\n      event.preventDefault();\n      handleSubmit();\n    }\n  };\n\n  return (\n    <form onKeyPress={(e) => handleOnEnter(e)}>\n      <div className={'form-group'}>\n        <label>Enter a prompt</label>\n        <div className={'form-row'}>\n          <div className={'col-lg-11 col-md-12 col-sm-12 mt-1 mb-1'}>\n            <input\n              className={'form-control col-12'}\n              type=\"text\"\n              placeholder={'Ex: What\\'s your favorite outdoor activity?'}\n              data-testid={'promptInput'}\n              value={newPrompt}\n              onChange={(event) => {\n                setNewPrompt(event.target.value);\n              }}\n            />\n          </div>\n\n          <div className={'col-lg-1 col-md-12 col-sm-12 mt-1 mt-1'}>\n            <button\n              className={'btn btn-primary col-12'}\n              type={'button'}\n              data-testid={'addPromptBtn'}\n              disabled={isInputBlank()}\n              onClick={handleSubmit}\n            >Add\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <div style={{ height: '2rem'}}>\n        {temporaryNotificationMessage()}\n      </div>\n    </form>\n  );\n}\n\nexport default NewPromptForm;","import React from 'react';\nimport { deletePrompt } from '../services/PromptService';\n\nfunction PromptsTable(props) {\n  const loadRowsWithPrompts = () => {\n    return props.data.slice(0).reverse().map((prompt, index) => {\n      return (\n        <tr key={prompt._id} className={ index === 0 && props.isNewItem ? 'animate-new-row' : '' }>\n          <td style={{ verticalAlign: 'middle' }}>{prompt.prompt}</td>\n          <td style={{ verticalAlign: 'middle' }}>\n            <button\n              data-testid={`deletePromptBtn-${index}`}\n              className={'btn'}\n              onClick={() =>\n                deletePrompt(prompt).then(() => {\n                  props.setIsNewItem(false);\n                  props.reloadData()\n                })\n              }\n            >\n              <span className={'fa fa-trash'} style={{ color: '#C70000' }}/>\n            </button>\n          </td>\n        </tr>\n      );\n    });\n  }\n\n  return (\n    <>\n      <h2>Prompts</h2>\n      <table className={'table'}>\n        <thead>\n        <tr>\n          <th scope={'col'}>Prompt</th>\n          <th scope={'col'}/>\n        </tr>\n        </thead>\n        <tbody>\n        {loadRowsWithPrompts()}\n        </tbody>\n      </table>\n    </>\n  )\n}\n\nexport default PromptsTable;","import React, { useEffect, useState } from 'react';\nimport NewPromptForm from './NewPromptForm';\nimport PromptsTable from './PromptsTable';\nimport { fetchPrompts } from '../services/PromptService';\n\nfunction Admin() {\n  const [prompts, setPrompts] = useState([]);\n  const [isNewItem, setIsNewItem] = useState(false);\n\n  useEffect(() => loadPrompts(), []);\n\n  const loadPrompts = () => {\n    fetchPrompts().then(response => setPrompts(response.data));\n  }\n\n  return (\n    <div className={'container spacer-2'}>\n      <h1>Admin</h1>\n      <br/>\n\n      <NewPromptForm reloadData={loadPrompts} setIsNewItem={setIsNewItem}/>\n      <br/>\n      <PromptsTable data={prompts} reloadData={loadPrompts} isNewItem={isNewItem} setIsNewItem={setIsNewItem}/>\n    </div>\n  );\n}\n\nexport default Admin;","import React from 'react';\nimport {\n  HashRouter,\n  Link,\n  Route,\n  Switch\n} from \"react-router-dom\";\nimport Prompter from './Prompter';\nimport Admin from './Admin';\n\nfunction NavBar() {\n  const PROMPT_GENERATOR_LINK = '/prompt/';\n  const ADMIN_LINK = '/admin/';\n\n  const menuToggleButton = () => {\n    return (\n      <button className={'navbar-toggler'}\n              type={'button'}\n              data-toggle={'collapse'}\n              data-target={'#navbarTogglerId'}\n              aria-controls={'navbarTogglerDemo02'}\n              aria-expanded={'false'}\n              aria-label={'Toggle navigation'}>\n        <span className={'navbar-toggler-icon'} />\n      </button>\n    );\n  }\n\n  return (\n    <HashRouter basename={process.env.PUBLIC_URL}>\n      <div>\n        <nav className={'navbar sticky-top navbar-expand-lg navbar-dark bg-dark'}>\n          <div className={'container'}>\n            <span className={'navbar-brand mb-0 h1'}>Journal Prompt Project</span>\n            {menuToggleButton()}\n\n            <div className={'collapse navbar-collapse justify-content-end'} id={'navbarTogglerId'}>\n              <form className={'form-inline my-2 my-lg-0'}>\n                <ul className={'navbar-nav nav-fill w-100'}>\n                  <li className={'nav-item active'} style={{ textAlign: 'left'}}>\n                    <Link\n                      to={PROMPT_GENERATOR_LINK}\n                      className={'nav-link mr-sm-2'}\n                      data-testid={'promptGeneratorNav'}\n                    >Prompter</Link>\n                  </li>\n                  <li className={'nav-item active'} style={{ textAlign: 'left'}}>\n                    <Link\n                      to={ADMIN_LINK}\n                      className={'nav-link mr-sm-2'}\n                      data-testid={'adminNav'}\n                    >Admin ⚙️</Link>\n                  </li>\n                </ul>\n              </form>\n            </div>\n          </div>\n        </nav>\n\n        <Switch>\n          <Route path={PROMPT_GENERATOR_LINK}>\n            <Prompter />\n          </Route>\n          <Route path={ADMIN_LINK}>\n            <Admin />\n          </Route>\n        </Switch>\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default NavBar;","import './App.css';\nimport React from 'react';\nimport NavBar from './components/NavBar';\n\nfunction App() {\n  return (<NavBar/>);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}