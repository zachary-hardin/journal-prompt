{"version":3,"sources":["services/PromptService.js","components/Prompter.js","components/NewPromptForm.js","components/PromptsTable.js","components/Admin.js","components/NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["BASE_URL","Prompter","useState","prompt","setPrompt","useEffect","retrievePrompt","axios","then","response","data","className","promptLoaded","onClick","NewPromptForm","props","newPrompt","setNewPrompt","addPromptStatus","setAddPromptStatus","handleSubmit","params","status","setIsNewItem","catch","reason","isInputBlank","trim","onKeyPress","e","event","key","preventDefault","type","placeholder","data-testid","value","onChange","target","disabled","style","height","PromptsTable","isNewItem","reloadData","verticalMiddle","verticalAlign","isFirstRowNew","index","scope","slice","reverse","map","_id","deletePrompt","color","Admin","prompts","setPrompts","loadPrompts","NavBar","PROMPT_GENERATOR_LINK","ADMIN_LINK","basename","process","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","to","path","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf586155.chunk.js","sourcesContent":["import * as axios from 'axios';\n\nconst BASE_URL = 'https://thawing-fortress-26537.herokuapp.com';\n\nexport const fetchPrompt = () => {\n  return axios.get(`${BASE_URL}/prompt`);\n}\n\nexport const fetchPrompts = () => {\n  return axios.get(`${BASE_URL}/get-prompts`);\n}\n\nexport const insertPrompt = (prompt) => {\n  return axios.post(`${BASE_URL}/new-prompt`, null, { params: { prompt } });\n}\n\nexport const deletePrompt = (prompt) => {\n  return axios.delete(`${BASE_URL}/delete`, { params: { _id: prompt._id } });\n}","import React, { useEffect, useState } from 'react';\nimport { fetchPrompt } from '../services/PromptService';\nimport '../styles/prompter-styles.css';\nimport '../styles/general.css';\n\nfunction Prompter() {\n  const [prompt, setPrompt] = useState('');\n\n  useEffect(() => {\n    retrievePrompt()\n  }, []);\n\n  const retrievePrompt = () => {\n    fetchPrompt().then(response => {\n      setPrompt(response.data);\n    });\n  }\n\n  const promptLoaded = () => {\n    if (prompt.prompt) {\n      return (<p className={'center-text'}>\"{prompt.prompt}\"</p>);\n    }\n  }\n\n  return (\n    <div>\n      <div className={'background-image-fullscreen'}>\n        <div className={'center prompt-font-size dark-grey prompt-width'}>\n          <div className={'center-content min-height'}>\n            {promptLoaded()}\n          </div>\n\n          <button\n            className={'btn col-lg-2 col-md-3 col-sm-12 purple-btn float-right'}\n            onClick={retrievePrompt}\n          >refresh\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Prompter;","import React, { useState } from 'react';\nimport { insertPrompt } from '../services/PromptService';\nimport '../styles/general.css';\n\nfunction NewPromptForm(props) {\n  const [newPrompt, setNewPrompt] = useState('');\n  const [addPromptStatus, setAddPromptStatus] = useState(200);\n\n  const temporaryNotificationMessage = () => {\n    if (addPromptStatus === 201) {\n      return (\n        <p>New Prompt Added</p>\n      );\n    } else if (addPromptStatus === 409) {\n      return (\n        <p>Failed to Add New Prompt</p>\n      );\n    }\n  };\n\n  const handleSubmit = () => {\n    insertPrompt(newPrompt).then(response => {\n      setAddPromptStatus(response.status);\n      setNewPrompt('');\n      props.setIsNewItem(true);\n    }).catch(reason => setAddPromptStatus(reason.response.status))\n  };\n\n  const isInputBlank = () => {\n    return newPrompt.trim() === '';\n  };\n\n  const handleOnEnter = (event) => {\n    const isEnterKey = event.key === 'Enter';\n\n    if (isEnterKey && !isInputBlank()) {\n      event.preventDefault();\n      handleSubmit();\n    }\n  };\n\n  return (\n    <form onKeyPress={(e) => handleOnEnter(e)}>\n      <div className={'form-group'}>\n        <label>Enter a prompt</label>\n        <div className={'form-row'}>\n          <div className={'col-lg-11 col-md-12 col-sm-12 mt-1 mb-1'}>\n            <input\n              className={'form-control col-12'}\n              type=\"text\"\n              placeholder={'Ex: What\\'s your favorite outdoor activity?'}\n              data-testid={'promptInput'}\n              value={newPrompt}\n              onChange={(event) => {\n                setNewPrompt(event.target.value);\n              }}\n            />\n          </div>\n\n          <div className={'col-lg-1 col-md-12 col-sm-12 mt-1 mt-1'}>\n            <button\n              className={'btn purple-btn col-12'}\n              type={'button'}\n              data-testid={'addPromptBtn'}\n              disabled={isInputBlank()}\n              onClick={handleSubmit}\n            >Add\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <div style={{ height: '2rem'}}>\n        {temporaryNotificationMessage()}\n      </div>\n    </form>\n  );\n}\n\nexport default NewPromptForm;","import React, { useEffect } from 'react';\nimport { deletePrompt } from '../services/PromptService';\nimport '../styles/general.css';\n\nfunction PromptsTable(props) {\n  useEffect(() => {\n    if (props.isNewItem) {\n      props.reloadData();\n    }\n  });\n\n  const verticalMiddle = {\n    verticalAlign: 'middle'\n  };\n\n  const isFirstRowNew = (index) => {\n    return index === 0 && props.isNewItem;\n  };\n\n  const loadRowsWithPrompts = () => {\n    return props.data.slice(0).reverse().map((prompt, index) => {\n      return (\n        <tr key={prompt._id} className={ isFirstRowNew(index) ? 'animate-new-row' : '' }>\n          <td style={verticalMiddle}>{prompt.prompt}</td>\n          <td style={verticalMiddle}>\n            <button\n              data-testid={`deletePromptBtn-${index}`}\n              className={'btn'}\n              onClick={() =>\n                deletePrompt(prompt).then(() => {\n                  props.setIsNewItem(false);\n                  props.reloadData()\n                })\n              }\n            >\n              <span className={'fa fa-trash'} style={{ color: '#FD2F98' }}/>\n            </button>\n          </td>\n        </tr>\n      );\n    });\n  }\n\n  return (\n    <>\n      <table className={'table'}>\n        <thead>\n        <tr>\n          <th scope={'col'}>Prompts</th>\n          <th scope={'col'}/>\n        </tr>\n        </thead>\n        <tbody>\n        {loadRowsWithPrompts()}\n        </tbody>\n      </table>\n    </>\n  )\n}\n\nexport default PromptsTable;","import React, { useEffect, useState } from 'react';\nimport NewPromptForm from './NewPromptForm';\nimport PromptsTable from './PromptsTable';\nimport { fetchPrompts } from '../services/PromptService';\nimport '../styles/general.css'\n\nfunction Admin() {\n  const [prompts, setPrompts] = useState([]);\n  const [isNewItem, setIsNewItem] = useState(false);\n\n  useEffect(() => loadPrompts(), []);\n\n  const loadPrompts = () => {\n    fetchPrompts().then(response => setPrompts(response.data));\n  }\n\n  return (\n    <div className={'container spacer-2 '}>\n      <NewPromptForm setIsNewItem={setIsNewItem}/>\n      <br/>\n      <PromptsTable data={prompts} reloadData={loadPrompts} isNewItem={isNewItem} setIsNewItem={setIsNewItem}/>\n    </div>\n  );\n}\n\nexport default Admin;","import React from 'react';\nimport {\n  HashRouter,\n  Link,\n  Route,\n  Switch\n} from \"react-router-dom\";\nimport Prompter from './Prompter';\nimport Admin from './Admin';\nimport '../styles/prompter-styles.css';\nimport '../styles/general.css';\nimport '../styles/nav-styles.css';\n\nfunction NavBar() {\n  const PROMPT_GENERATOR_LINK = '/prompt/';\n  const ADMIN_LINK = '/admin/';\n\n  const menuToggleButton = () => {\n    return (\n      <button className={'navbar-toggler'}\n              type={'button'}\n              data-toggle={'collapse'}\n              data-target={'#navbarTogglerId'}\n              aria-controls={'navbarTogglerDemo02'}\n              aria-expanded={'false'}\n              aria-label={'Toggle navigation'}>\n        <span className={'navbar-toggler-icon'}/>\n      </button>\n    );\n  }\n\n  return (\n    <HashRouter basename={process.env.PUBLIC_URL}>\n      <div>\n        <nav className={'navbar sticky-top navbar-expand-lg navbar-light bg-light'}>\n          <div className={'container'}>\n            <span className={'grey-color font-size-30 disable-select'}>the journal project</span>\n            {menuToggleButton()}\n\n            <div className={'collapse navbar-collapse justify-content-end'} id={'navbarTogglerId'}>\n              <form className={'form-inline my-2 my-lg-0'}>\n                <ul className={'navbar-nav nav-fill w-100'}>\n                  <li className={'nav-item active text-align-left disable-select'}>\n                    <Link\n                      to={PROMPT_GENERATOR_LINK}\n                      className={'nav-link mr-sm-2 grey-color font-size-20'}\n                    >prompter</Link>\n                  </li>\n                  <li className={'nav-item active text-align-left disable-select'}>\n                    <Link\n                      to={ADMIN_LINK}\n                      className={'nav-link mr-sm-2 grey-color font-size-20'}\n                    >admin</Link>\n                  </li>\n                </ul>\n              </form>\n            </div>\n          </div>\n        </nav>\n\n        <Switch>\n          <Route path={PROMPT_GENERATOR_LINK}>\n            <Prompter/>\n          </Route>\n          <Route path={ADMIN_LINK}>\n            <Admin/>\n          </Route>\n        </Switch>\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default NavBar;","import './App.css';\nimport React from 'react';\nimport NavBar from './components/NavBar';\n\nfunction App() {\n  return (<NavBar/>);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}