{"version":3,"sources":["App.js","services/PromptService.js","reportWebVitals.js","index.js"],"names":["App","useState","prompt","setPrompt","useEffect","retrievePrompt","axios","then","response","data","className","style","height","promptLoaded","data-testid","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAwCeA,MApCf,WAAgB,IAAD,EACeC,mBAAS,IADxB,mBACNC,EADM,KACEC,EADF,KAGbC,qBAAU,WACRC,MACC,IAEH,IAAMA,EAAiB,WCRhBC,MAAU,uDDSDC,MAAK,SAAAC,GACjBL,EAAUK,EAASC,UAUvB,OACE,sBAAKC,UAAW,YAAhB,UACE,wDAEA,qBAAKC,MAAO,CAAEC,OAAQ,QAAtB,SAViB,WACnB,GAAIV,EAAOA,OACT,OAAQ,4BAAIA,EAAOA,SAShBW,KAGH,wBACEH,UAAW,kBACXI,cAAa,gBACbC,QAASV,EAHX,gCEnBSW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ad584467.chunk.js","sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { fetchPrompt } from './services/PromptService';\n\nfunction App() {\n  const [prompt, setPrompt] = useState('');\n\n  useEffect(() => {\n    retrievePrompt()\n  }, []);\n\n  const retrievePrompt = () => {\n    fetchPrompt().then(response => {\n      setPrompt(response.data);\n    });\n  }\n\n  const promptLoaded = () => {\n    if (prompt.prompt) {\n      return (<p>{prompt.prompt}</p>);\n    }\n  }\n\n  return (\n    <div className={'container'}>\n      <h1>Journal Prompt Project</h1>\n\n      <div style={{ height: '5rem' }}>\n        {promptLoaded()}\n      </div>\n\n      <button\n        className={'btn btn-primary'}\n        data-testid={'refreshPrompt'}\n        onClick={retrievePrompt}\n      >Refresh Prompt</button>\n    </div>\n  );\n}\n\nexport default App;\n","import * as axios from 'axios';\n\nexport const fetchPrompt = () => {\n  return axios.get('https://thawing-fortress-26537.herokuapp.com/prompt');\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}